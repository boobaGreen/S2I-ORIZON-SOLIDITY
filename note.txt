npm install --save-dev hardhat
npx hardhat init


** sembra non necessario x test su emit:
in hardhat config:
require("@nomicfoundation/hardhat-chai-matchers");
npm install --save-dev @nomicfoundation/hardhat-chai-matchers
npm install --save-dev @nomicfoundation/hardhat-chai-matchersnpm install --save-dev @nomicfoundation/hardhat-chai-matchers chai@4 @nomicfoundation/hardhat-ethers ethers


-----------------------------------------------------------
npx hardhat ignition deploy ignition/modules/CourseCommerceManagerModule.js --network localhost 


esempio con parametri
npx hardhat ignition deploy ignition/modules/CourseCommerceManagerModule.js --network localhost --parameters ignition/paramsSepolia.json
-----------------------------------------------------------



    Mapping degli indirizzi dei fornitori di servizi turistici con i rispettivi saldi
    mapping(address => uint) public balancesCompanyHotel

    Mapping degli indirizzi dei clienti con i rispettivi saldi
    mapping(address => uint) public balancesClients

    Quando un cliente prenota un viaggio, trasferire e bloccare l’importo della prenotazione sul suo saldo all’interno del contratto, fino al completamento del viaggio

    Inviare al saldo del rispettivo fornitore l’importo versato da un cliente, al termine del viaggio

    Se il cliente decide di annullare una prenotazione prima della data di partenza, l’importo bloccato viene restituito al suo conto

    Restituire il saldo attuale del cliente o del fornitore di servizi turistici

    Permettere al fornitore di servizi turistici di prelevare i fondi dal proprio saldo.

Successivamente, pubblica lo smart contracts sulla blockchain.

Realizza inoltre una Libreria in Solidity che permetta le seguenti operazioni, e utilizzala all’interno del contratto TripManager.sol in modo che: 

    Gestisca una struttura che rappresenta un viaggio, con nome, location, data di inizio e fine, prezzo e fornitore

    https://soliditytips.com/articles/solidity-dates-time-operations/
    nota le date sono in unix time stamp 

    struct Trip {
        string name;
        string location;
        uint256 startDate;
        uint256 endDate;
        uint256 price;
        address companyHotel;
        uint256 tripId;
    }

    CREA NUOVO VIAGGIO , 


    Previa prenotazione di un viaggio, emetta un evento relativo a tale prenotazione

    Restituisca un array contenente tutti i viaggi registrati.



npm install --save-dev @nomiclabs/hardhat-ethers ethers chai @types/chai @types/node typescript ts-node